<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Galaxy Blast</title>
    <style>
     *{
        padding: 0;
        margin: 0;
        background-color: rgb(85, 79, 79);
        overflow: hidden;
        text-align: center;
        font-family: "Press Start 2P", "consolas";
        color: white;
        background-color: black;
    }
    #game{
        width: 600px;
        height: 450px;
        margin: auto;
        box-sizing: border-box;
        background-image: url("https://www.ohsat.com/tutorial/megalaga/megalaga-1/images/scrolling.gif");
        border: 9px solid purple;
        position: relative;
        top: -59px;
    }
    #start, #game-over {
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
          background-image: url("https://66.media.tumblr.com/9f8f4f015b3f0934ae362e3e814ff5ca/tumblr_nfy5q7iAh61rfzr18o1_500.gif");
          position: relative;
          top: -50px;
    }
    #character{
        width: 100px;
        height: 100px;
        position: relative;
        top: 340px;
        left: 300px;
        border-radius: 20px;
       
    }
    #block{
        width: 100px;
        height: 100px;
        top: 500px;
        left: 100px;
        background-color: black;
        position: relative;
        animation: slide 1s infinite linear;
    }
    @keyframes slide{
        0%{top:-280px};
        100%{top:500px};
    }
    #meteor{
        width: 100px;
        height: 120px;
        top: 500px;
        left: 300px;
        position: relative;
        animation: meteor 0.9s infinite linear;
    }
    @keyframes meteor{
        0%{top:-280px};
        100%{top: 500px};
    }
    #monster{
        width: 100px;
        height: 120px;
        top: 1000px;
        left: 100px;
        position: relative;
        animation: meteor 1.5s infinite linear;
    }
    @keyframes monster{
        0%{top:-280px};
        100%{top: 500px};
    }
    button{
        width: 250px;
        height: 70px; 
        background-color: black;
        border: 2px solid purple
      }
      button:hover{
        background-color: black;
        color: rgb(221, 199, 199);
        filter: drop-shadow(5px 5px 1px rgba(0, 0, 0, 0.25));
        border: 4px solid purple;
    }
    #result{
        height: 510px;
        width: 800px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
        display: none ;
        position: relative;
          top: -61px;
    }
    #tutorial{
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
        display: none ;
        background-image: url("https://66.media.tumblr.com/9f8f4f015b3f0934ae362e3e814ff5ca/tumblr_nfy5q7iAh61rfzr18o1_500.gif");
        position: relative;
          top: -50px;
    }
    #information{
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
        display: none ;
        background-image: url("https://66.media.tumblr.com/9f8f4f015b3f0934ae362e3e814ff5ca/tumblr_nfy5q7iAh61rfzr18o1_500.gif");
        position: relative;
          top: -50px;
          font-size: 1.1vw;
    }
    #info{
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
        display: none ;
        background-image: url("https://66.media.tumblr.com/9f8f4f015b3f0934ae362e3e814ff5ca/tumblr_nfy5q7iAh61rfzr18o1_500.gif");
        position: relative;
          top: -50px;
          font-size: 1.1vw;
    }
    #about{
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 30px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
        display: none ;
        background-image: url("https://66.media.tumblr.com/9f8f4f015b3f0934ae362e3e814ff5ca/tumblr_nfy5q7iAh61rfzr18o1_500.gif");
        position: relative;
          top: -50px;
    }
    h1{
        color: rgb(231, 15, 15);
    }
    #black{
        background-color: rgb(0, 0, 0);
        width: 660px;
        height: 61.5px;
        position: relative;
        top: -440px;
        left: 0px;
    }
    #company{
        width: 1080px;
        height: 670px;
        margin:  1rem auto;
        font-size: 15px;
        text-align: center;
        color: white;
        font-family: "Press Start 2P", "consolas";
          position: relative;
          top: -20px;
    }
    #pic{
        position: relative;
    }
    h5{
        position: relative;
        top:3px;
        left: 30px;
        color: white;
        text-align: left;
        font-size: 15px;
        
    }
    h6{
        font-size: 15px;
        top: 10px;
        position: relative;
    }
    p{
        color: gray;
        font-size: 12px;
        top: 600px;
    }
    h3{
        font-size: 1.9vw;
        color: white;
    }
    #random{
        font-size: 15px;
        color: gray;
    }
    span{
        color: white;
    }

    .rotated-text {
        display: inline-block;
        transform: rotate(-35deg);
        color: yellow;
        background-color: transparent;
        position: relative;
        left: 23%;
        top:-5%
        
    }

    </style>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap" rel="stylesheet">
    
</head>
<body> 
     <h5>Version_1.12.6</h5>
    <br  />
    <br  />
    
    <br />
<div id="start" style="display:block;">
    <br  />       
    <h2>Galaxy Blast</h2>
    <h6>!Github Edition!</h6>
    <p class="rotated-text">Perfect School Game!</p>  
    <br  />       
    <br  />       
    <a href="#" onclick="startGame()"><button>Play Game</button></a>
    <br  />
    <br  />
    <a href="#" onclick="startTutorial()"><button>How To Play</button></a>
    <br  />
    <br   />
    
</div>

    <div id="game" style="display:none;">
        <div id="character"><img src="https://pixeljoint.com/files/icons/full/avion.gif" alt="trulli" width="100px" height="100px"></div>
        <div id="meteor"><img src="http://vignette3.wikia.nocookie.net/touken-ranbu/images/8/8b/Fire_gif.gif/revision/latest?cb=20150511021654f" alt="trulli" width="55px" height="80px"></div>
        <div id="block"><img src="https://vignette3.wikia.nocookie.net/touken-ranbu/images/8/8b/Fire_gif.gif/revision/latest?cb=20150511021654" alt="trulli" width="80px" height="100px"></div>
        <div id="monster"><img src="https://vignette3.wikia.nocookie.net/touken-ranbu/images/8/8b/Fire_gif.gif/revision/latest?cb=20150511021654" alt="trulli" width="80px" height="100px"></div>
        <div id="black"></div>
        </div>
        <div id="result">
            <br  />
            <br  />
           <h1>GAME OVER</h1>
           <br  />
           <div id="random"><script>var random=new Array(); 
            random[0]="Nice try, you can do it!"; 
            random[1]="Better Luck Next Time!"; 
            random[2]="Almost there, you got it!";
            random[3]="Try Again, almost there!";
            random[3]="Do not let Asher laugh at you!";
            random[4]="You can do this! You're so close!";
            random[5]="Never Give up! Never Back";
            var id=Math.round(Math.random()*(random.length-1)); document.write(random[id]);</script>
            <br  />
            <br  />
        </div>
            <h3><p>Score: <span id="score">0</span></p></h3>
    <br  />
    <button onclick="restartGame()">Restart</button>
    <br  />
    <br  />

            <button onclick="location.reload()">Quit</button>
        </div>

 <div id="tutorial" style="display:none;">
    <br  />
    <h3>To Play The Game, Press the "Play Game" Button.</h3>
<h3>To Control your Spaceship, press the left and right keys on your keyboard.</h3>
<h3>To Quit playing the Game, press the "Quit Game" button.</h3>
<br  />
<h3>Tip: You have to to avoid the firemeteors at all costs, or else you will lose!</h3>
<br  />
<h3>Tip: If you are on mobile, press the left and right side of your screen to control your ship!</h3>
<br  />
<br  />
<button onclick="quitGame()">Quit</button>
</div>
   </body>
<script>
    var score = 0;
    var isGameOver = false;

    myAudio = new Audio('music.mp3');
myAudio.loop = true;
myAudio.play();

    function startGame() {
        let startDiv = document.getElementById("start");
        let gameDiv =document.getElementById("start");
        game.style.display = "block";
       start.style.display= "none";
}

     //Tutorial section
     function startTutorial() {
        let startDiv = document.getElementById("start");
        let tutorialDiv = document.getElementById("start");
        game.style.display = "none";
       start.style.display= "none";
       tutorial.style.display = "block"
    }
    
    //quit section
    function quitGame() {
        let startDiv = document.getElementById("start");
        let quitDiv =document.getElementById("start");
        game.style.display = "none";
       start.style.display = "block";
       result.style.display = "none"
       tutorial.style.display = "none";
    }
// result section
var result = document.getElementById("result");

document.addEventListener("keydown", event => {
    if (!isGameOver) {
        if(event.key === "ArrowLeft"){ moveLeft(); }
        if(event.key === "ArrowRight"){ moveRight(); }
    }
});

function moveLeft() {
    let left = parseInt(window.getComputedStyle(character).getPropertyValue("left"));
    left -= 100;
    if (left >= 0) {
        character.style.left = left + "px";
        updateScore();
    }
}

function moveRight() {
    let left = parseInt(window.getComputedStyle(character).getPropertyValue("left"));
    left += 100;
    if (left < 600) {
        character.style.left = left + "px";
        updateScore();
    }
}

function updateScore() {
    if (!isGameOver && event.key === "ArrowRight") {
        score += 10;
        document.getElementById("score").textContent = score;
    }
}

function subtractScore() {
    if (!isGameOver) {
        score -= 20; 
        if (score < 0) {
            score = 0;
        }
        document.getElementById("score").textContent = score;
    }
}

function restartGame() {
    // (resetting other game-related variables)
    isGameOver = false;
}
      var block = document.getElementById("block");
      var counter = 1;
      block.addEventListener('animationiteration', () => {
          var random = Math.floor(Math.random() * 6);
          left = random * 100;
          block.style.left = left + "px";
          counter * 2;
      });
      var metoer = document.getElementById("meteor");
      var counter = 1;
      meteor.addEventListener('animationiteration', () => {
          var random = Math.floor(Math.random() * 6);
          left = random * 100;
          meteor.style.left = left + "px";
          counter * 1;
      });
      var monster = document.getElementById("monster");
      var counter = 1;
      monster.addEventListener('animationiteration', () => {
          var random = Math.floor(Math.random() * 6);
          left = random * 100;
          monster.style.left = left + "px";
          counter * 1;
      });

      setInterval(function(){
        var characterLeft = parseInt(window.getComputedStyle(character).getPropertyValue("left"));
        var blockLeft = parseInt(window.getComputedStyle(block).getPropertyValue("left"));
        var blockTop = parseInt(window.getComputedStyle(block).getPropertyValue("top"));
        if(characterLeft==blockLeft && blockTop<500 && blockTop>210){ 
            block.style.animation = 'none';
            result.style.display = 'block';
            game.style.display = 'none';
             block.style.animation = "linear";
             subtractScore();
             isGameOver = true; // Game over
            }
        }, 0);
        
        function subtractScore() {
            score -= 20; 
            if (score < 0) {
                score = 0;
            }
            document.getElementById("score").textContent = score;
        }
      
      setInterval(function(){
        var characterLeft = parseInt(window.getComputedStyle(character).getPropertyValue("left"));
        var meteorLeft = parseInt(window.getComputedStyle(meteor).getPropertyValue("left"));
        var meteorTop = parseInt(window.getComputedStyle(meteor).getPropertyValue("top"));
        if(characterLeft==meteorLeft && meteorTop<500 && meteorTop>300){ 
            meteor.style.animation = 'none';
            result.style.display = 'block';
            game.style.display = 'none';
             meteor.style.animation = "linear";
             subtractScore();
             isGameOver = true; // Game over
            }
        }, 0);
        
        function subtractScore() {
            score -= 20; 
            if (score < 0) {
                score = 0;
            }
            document.getElementById("score").textContent = score;
        }

      setInterval(function(){
        var characterLeft = parseInt(window.getComputedStyle(character).getPropertyValue("left"));
        var monsterLeft = parseInt(window.getComputedStyle(monster).getPropertyValue("left"));
        var monsterTop = parseInt(window.getComputedStyle(monster).getPropertyValue("top"));
        if(characterLeft==monsterLeft && monsterTop<500 && monsterTop>100){ 
            monster.style.animation = 'none';
            meteor.style.animation = 'none';
            result.style.display = 'block';
            game.style.display = 'none';
            monster.style.animation = "linear";
            subtractScore();
            isGameOver = true; // Game over
        }
    }, 0);
    
    function subtractScore() {
        score -= 20; 
        if (score < 0) {
            score = 0;
        }
        document.getElementById("score").textContent = score;
    }

      function restartGame() {
        character.style.left = "200px";
        result.style.display = "none";  
        game.style.display = "block";   
        block.style.animation = "slide 1s infinite linear";  
        meteor.style.animation = "meteor 0.9s infinite linear"; 
        score = 0;
        document.getElementById("score").textContent = score;
        result.style.display = 'none';
        game.style.display = 'block';
        block.style.animation = "slide 1s infinite linear";

        meteor.style.animation = "meteor 1.9s infinite linear";
        block.style.animation = "slide 0.8s infinite linear";
        meteor.style.animation = "meteor 0.8s infinite linear";
        monster.style.animation = "monster 1.3s infinite linear"
        score = 0;
        document.getElementById("score").textContent = score;
        isGameOver = false;  // Reset isGameOver when restarting the game
      }
    </script>
    </html>
